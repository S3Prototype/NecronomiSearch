DOING:

=====

https://www.gillmeister-software.com/online-tools/text/remove-line-breaks.aspx

https://www.textfixer.com/tools/add-line-breaks.php

TODO:
* Put a "Powered by AWS Amplify" text at the bottom of the search results page.
* Put a "Back" button in these boxes for backing out.
* Style search results.
* Save searches to redis cache for fast recovery.
* Save previous 3 searches on the client. No need to ping server if it's been searched already. This is not data that will likely update.
* Use a linter to clean up code.
* If you have time, make it an accessible API that anyone can hit, and create an NPM package.


DONE:

===
2/26/21

* Put those into individiual boxes, which when you click on them, they fill the screen.
    ** Pop up modal
* Implement search
* Decide how you will split up the texts and make them searchable (try to optimize for speed and least resources)
* Use code to break text up and save it to database
* Then find the searched-for text, and return it and +-750 characters around it
* Use backend and api to test out search
* Just get the raw entire novel first and show it, just to prove it works.

===
2/25/21
* Research AWS amplify.
* Write backend to automatically generate the checklist of options based on db tables available (use dummy object for that initially)


===
2/23/21

* Style the page in css
    * mobile-first